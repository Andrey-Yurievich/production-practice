#BlueJ class context
comment0.target=ResultGroup
comment1.params=
comment1.target=ResultGroup()
comment10.params=words
comment10.target=ResultGroup\ filterForCipher(java.lang.String)
comment11.params=s
comment11.target=boolean\ delSchedule(Result)
comment12.params=s
comment12.target=Result\ getSchedule(Result)
comment13.params=s
comment13.target=boolean\ addSchedule(Result)
comment14.params=s
comment14.target=boolean\ updateSchedule(Result)
comment15.params=g1
comment15.target=boolean\ deleteScheduleGroup(java.lang.String)
comment16.params=g1
comment16.target=ResultGroup\ findABC(java.lang.String)
comment17.params=
comment17.target=ResultGroup\ aboveAvgTime()
comment18.params=g1
comment18.target=ResultGroup\ aboveGivenTime(int)
comment19.params=
comment19.target=float\ avgTime()
comment2.params=name
comment2.target=ResultGroup(java.lang.String)
comment20.params=g1\ g2
comment20.target=ResultGroup\ betweenTime(int,\ int)
comment21.params=
comment21.target=void\ putListOfSchedules()
comment22.params=
comment22.target=java.lang.String\ toString()
comment3.params=name\ list
comment3.target=ResultGroup(java.lang.String,\ java.util.List)
comment4.params=
comment4.target=java.util.List\ getSchedules()
comment5.params=
comment5.target=java.util.List\ totalSumFirm()
comment6.params=
comment6.target=int\ generalMaxSquare()
comment7.params=
comment7.target=int\ sizeOfList()
comment8.params=
comment8.target=ResultGroup\ sort()
comment9.params=comp
comment9.target=ResultGroup\ sort(java.util.Comparator)
numComments=23
